services:
  nginx:
    image: nginx:1.27-alpine
    environment:
      - DOMAIN=${DOMAIN}
      - EMAIL=${EMAIL}
    volumes:
      - ./app:/var/www/html:rw
      - ./nginx/default.http.template:/etc/nginx/templates/default.http.template:ro
      - ./nginx/default.ssl.template:/etc/nginx/templates/default.ssl.template:ro
      - ./nginx/40-switch-template.sh:/docker-entrypoint.d/40-switch-template.sh:ro
      - certbot-www:/var/www/certbot:rw
      - etc-letsencrypt:/etc/letsencrypt:rw
    ports:
      - "80:80"
      - "443:443"
    depends_on: [ php ]
    restart: unless-stopped
    networks: [ web ]

  php:
    build: ./php
    working_dir: /var/www/html
    environment:
      APP_ENV: local
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: db
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./app:/var/www/html:rw
    networks: [ web ]
    restart: unless-stopped

  db:
    image: mariadb:10.11
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    networks: [ web ]
    restart: unless-stopped

  init:
    build: ./php
    working_dir: /var/www/html
    environment:
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: db
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}    
    volumes:
      - ./app:/var/www/html
    entrypoint: >
      sh -lc "
      if [ ! -f composer.json ]; then
        composer create-project laravel/laravel .;
      fi &&
      composer install &&
      php -r 'file_exists(\".env\")||copy(\".env.example\",\".env\");' &&
      sed -i \"s/^DB_CONNECTION=.*/DB_CONNECTION=${DB_CONNECTION}/\" .env &&
      sed -i \"s/^DB_HOST=.*/DB_HOST=${DB_HOST}/\" .env &&
      sed -i \"s/^DB_PORT=.*/DB_PORT=3306/\" .env &&
      sed -i \"s/^DB_DATABASE=.*/DB_DATABASE=${DB_DATABASE}/\" .env &&
      sed -i \"s/^DB_USERNAME=.*/DB_USERNAME=${DB_USERNAME}/\" .env &&
      sed -i \"s/^DB_PASSWORD=.*/DB_PASSWORD=${DB_PASSWORD}/\" .env &&
      php artisan key:generate &&
      php artisan config:clear &&
      php artisan migrate --force &&
      php artisan db:seed --force
      "
    networks: [ web ]

  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot-www:/var/www/certbot
      - etc-letsencrypt:/etc/letsencrypt
    networks: [ web ]
    entrypoint: sh -c "trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet; sleep 12h; done"

volumes:
  dbdata:
  certbot-www:
  etc-letsencrypt:

networks:
  web:
    driver: bridge
